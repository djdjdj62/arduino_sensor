
#include <IRremote.h>
//需要IR函式庫" Arduino-IRremote " 建議使用2.23版本

//IR_SEND_PIN = 3 是寫在 irSend.cpp 裡的文件預設

const byte RECV_PIN = 11;
const byte RED_LED = 7;

IRrecv irrecv(RECV_PIN);    //IR接收的庫
IRsend irsend;              //IR發射的庫
decode_results results;

//每一組紅外線編碼都略有不同，需自行嘗試對應數值
//FFA25D == 16753245 == 1
//FF629D == 16736925 == 2 
//FFE21D == 16769565 == 3
//FF22DD == 16720605 == 4
//FF02FD == 16712445 == 5
//FFC23D == 16761405 == 6
//FFE01F == 16769055 == 7
//FFA857 == 16754775 == 8
//FF906F == 16748655 == 9
//FF6897 == 16738455 == *
//FF9867 == 16750695 == 0 
//FFB04F == 16756815 == #
//FF18E7 == 16718055 == 上
//FF4AB5 == 16730805 == 下
//FF10EF == 16716015 == 左
//FF5AA5 == 16734885 == 右
//FF38C7 == 16726215 == OK

void setup()
{
  pinMode(RED_LED, OUTPUT);
  Serial.begin(9600);
  irrecv.enableIRIn(); // Start the receiver
  Serial.println("Enabled IRin");
}

void loop() {
  if (irrecv.decode(&results)) {
    Serial.println(results.value ,HEX);
    switch(results.value){
      case 16753245:
        Serial.println("->  1 !");
        break;
      case 16736925:
        Serial.println("->  2 !");
        break;
      case 16769565:
        Serial.println("->  3 !");
        break;
      case 16720605:
        Serial.println("->  4 !");
        break;
      case 16712445:
        Serial.println("->  5 !");
        break;
      case 16761405:
        Serial.println("->  6 !");
        break;
      case 16769055:
        Serial.println("->  7 !");
        break;
      case 16754775:
        Serial.println("->  8 !");
        break;
      case 16748655:
        Serial.println("->  9 !");
        break;
      case 16738455:
        Serial.println("->  * !");
        break;
      case 16750695:
        Serial.println("->  0 !");
        break;
      case 16756815:
        Serial.println("->  # !");
        break;
      case 16718055:
        Serial.println("->  UP !");
        irsend.sendNEC(0x1777433C, 32);               //send_看你是哪個廠牌規格___
        irrecv.enableIRIn();                          // 發送完重新設為接收模式
        break;
      case 16730805:
        Serial.println("->  DOWN !");
        break;
      case 16716015:
        Serial.println("->  LEFT !");
        digitalWrite(RED_LED , 1 );
        break;
      case 16734885:
        Serial.println("->  RIGHT !");
        digitalWrite(RED_LED , LOW );
        break;
      case 16726215:
        Serial.println("->  OK !");
        digitalWrite(RED_LED , !digitalRead(7) );
        break;
      //default:
        //Serial.println("~~~NUN~~~");
    }
    irrecv.resume(); // Receive the next value
  }
  delay(100);
}
